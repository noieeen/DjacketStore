- create and install Django --DONE
- install Vue and run --DONE
- install Font Awesome --DONE
- set Base Template --DONE
- create django app and models for products --DONE
- create serializer and views for the products --DONE
- create simple front page --DONE
- view product --DONE
    - create viewset in django
    - create view page for showing product
    - add link to detail page
- sette opp Vuex / State --DONE
- make it possible to add to cart
    - add functionality to vuex
    - initialize store in app.vue
    - add button to produt page
    - show a toast message
- implement a loading bar --DONE  ##https://youtu.be/Yg5zkd9nm6w?t=4030
- set title --DONE
- view product on category --Done
- search --DONE
- have cart --DONE
- manage cart items --DONE https://youtu.be/Yg5zkd9nm6w?t=5918
- sign up --DONE
- log in --DONE
- my account --DONE
- proceed to checkout --DONE
- create a simple success page
- setup strip --DONE
- show my orders --DONE

- deploy Django --DONE
    - create server (digital ocean) => subscription $4/m
    - install software
        - sudo apt-get update
        - sudo apt-get upgrade
        - sudo apt install python3-pip python3-dev libpq-dev postgresql-contrib nginx
        - sudo apt install certbot python3-certbot-nginx

    - create postgres database
        - sudo -u postgres psql
            - CREATE DATABASE djackets;
            - CREATE USER djacketsuser WITH PASSWORD 'djacketspassword';
            - ALTER ROLE djacketsuser SET client_encoding TO 'utf8';
            - GRANT ALL PRIVILEGES ON DATABASE djackets TO djacketsuser;
            - \q
        - sudo -H pip3 install --upgrade pip
        - sudo -H pip3 install virtualenv
        - mkdir -p /webapps/djackets
        - cd /webapps/djackets/
        - sudo groupadd --system webapps
        - sudo useradd --system --gid webapps --shell /bin/bash --home /webapps/djackets djackets
        - virtualenv environment_3_8_2
        - source environment_3_8_2/bin/activate

-> back to VSCode
- pip freeze (list packages installed)

-> to teminal (digitalocean)
- touch req.txt
- vi req.txt
- paste list copied packages
- :wq (type)
- pip install -r req.txt
- pip install psycopg2-binary

-> back to VSCode
- zip -r djackets_django.zip djackets_django (Folder Path(Djackets))
- scp -r djackets_django.zip root@159.223.144.209:.

-> to terminal (digitalocean)
- cp /root/djackets_django.zip .  !!ต้องเว้นจุด( .) https://youtu.be/Yg5zkd9nm6w?t=8727
- apt install unzip
- rm djackets_django.zip
- ls -larth
- chown -R djackets:webapps .
- ls -larth (check root : permissions again)
- cd djackets_django/
- cd djackets_django/
- cp settings.py settingsprod.py
- vi settingsprod.py
    - delete DATABASES {}
    - :insert (i)
        - DATABASES = {
            'default':{
                'ENGINE':'django.db.backends.postgresql_psycopg2',
                'NAME':'djackets',
                'USER':'djacketsuser',
                'PASSWORD':'djacketspassword',
                'HOST':'localhost',
                'PORT':'',
            }   
        }
    - save and exit (:wq)
- back to /djackets_django
- cp manage.py manageprod.py
- vi manageprod.py
    - :insert (i)
        - edit 'djackets_django.settings' to djackets_django.settingsprod
        - save and exit (:wq)
- python manageprod.py makemigrations
- python manageprod.py migrate
- pip install gunicorn
- back to -> (environment_3_8_2) root@Django-Store:/webapps/djackets#
-  vi environment_3_8_2/bin/gunicorn_start
        #!/bin/sh

        NAME='djackets_django'
        DJANGODIR=/webapps/djackets/djackets_django
        SOCKFILE=/webapps/djackets/environment_3_8_2/run/gunicorn.sock
        USER=djackets
        GROUP=webapps
        NUM_WORKERS=3
        DJANGO_SETTINGS_MODULE=djackets_django.settingsprod
        DJANGO_WSGI_MODULE=djackets_django.wsgi
        TIMEOUT=120

        cd $DJANGODIR
        source ../environment_3_8_2/bin/activate
        export DJANGO_SETTINGS_MODULE=$DJANGO_SETTINGS_MODULE
        export PYTHONPATH=$DJANGODIR:$PYTHONPATH

        RUNDIR=$(dirname $SOCKFILE)
        test -d $RUNDIR || mkdir -p $RUNDIR

        exec ../environment_3_8_2/bin/gunicorn ${DJANGO_WSGI_MODULE}:application \
        --name $NAME \
        --workers $NUM_WORKERS \
        --timeout $TIMEOUT \
        --user=$USER --group=$GROUP \
        --bind=unix:$SOCKFILE \
        --log-level=debug \
        --log-file=-

- chmod +x environment_3_8_2/bin/gunicorn_start
- cd environment_3_8_2/bin/
- ./gunicorn_start (run gunicorn)
- (environment_3_8_2) root@Django-Store:/webapps/djackets/environment_3_8_2/bin# apt install supervisor
- cd /etc/supervisor/conf.d
- touch djackets.conf
- vi djackets.conf
        [program:djackets_django]
        command = /webapps/djackets/environment_3_8_2/bin/gunicorn_start
        user = djackets
        stdout_logfile = /webapps/djackets/environment_3_8_2/logs/supervisor.log
        redirect_stderr = true
        environment=LANG=en_US.UTF-8,LC_ALL=en_US.UTF-8

    - save and exit (:wq)

- mkdir /webapps/djackets/environment_3_8_2/logs
- supervisorctl reread
- supervisorctl update
- supervisorctl status
- supervisorctl status

->install nginx
- cd /etc/nginx/sites-available/
- vi apidjackets.codewithnoie
        upstream djackets_app_server {
            server unix:/webapps/djackets/environment_3_8_2/run/gunicorn.sock fail_timeout=0;
        }

        server {
            listen 80;
            server_name apidjackets.codewithnoie.com;
            return 301 https://apidjackets.codewithnoie.com$request_uri;
        }

        server {
            listen 443 ssl;
            server_name apidjackets.codewithnoie.com;

            client_max_body_size 4G;

            access_log /webapps/djackets/environment_3_8_2/logs/nginx-django-access.log;
            error_log /webapps/djackets/environment_3_8_2/logs/nginx-django-error.log;

            ssl_certificate /etc/letsencrypt/live/apidjackets.codewithnoie.com/fullchain.pem;
            ssl_certificate_key /etc/letsencrypt/live/apidjackets.codewithnoie.com/privkey.pem;

            ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
            ssl_prefer_server_ciphers on;
            ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';

            location /static/ {
                alias /webapps/djackets//environment_3_8_2/djackets/static/;
            }

            location /media/ {
                alias /webapps/djackets/djackets_django/media/;
            }

            location / {
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

                proxy_set_header Host $http_host;

                proxy_redirect off;

                if (!-f $request_filename) {
                    proxy_pass http://djackets_app_server;
                }
            }
        }

- cd ../sites-enabled/
- ln -s ../sites-available/apidjackets.codewithnoie.com .
- ls -larth
- (environment_3_8_2) root@Django-Store:/etc/nginx/sites-enabled# service nginx restart
- systemctl status nginx.service (debug error)
- sudo certbot --nginx -d apidjackets.codewithnoie.com ->(error, must new cert)
- rm apidjackets.codewithnoie.com
- sudo certbot -d apidjackets.codewithnoie.com

